syntax = "v1"

import "base/user.api"

type (
	LoginRequest {
		Username string `form:"username" validate:"gt=0,lte=32"`
		Password string `form:"password" validate:"gt=0,lte=32"`
	}

	LoginResponse {
		StatusCode string `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
		UserId     int64  `json:"user_id,omitempty"`
		Token      string `json:"token,omitempty"`
	}

	RegisterRequest {
		Username string `form:"username" validate:"gt=0,lte=32"`
		Password string `form:"password" validate:"gt=0,lte=32"`
	}

	RegisterResponse {
		StatusCode string `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
		UserId     int64  `json:"user_id"`
		Token      string `json:"token"`
	}

	UserInfoRequest {
		UserId int64  `form:"user_id" validate:"gt=0"`
		Token  string `form:"token" validate:"gt=0"`
	}

	UserInfoResponse {
		StatusCode string `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
		User       User   `json:"user"`
	}
)

@server(
	group: user
	prefix: /douyin/user
)
service api {
	@doc "登录"
	@handler login
	post /login(LoginRequest) returns (LoginResponse)
	
	@doc "注册"
	@handler register
	post /register(RegisterRequest) returns (RegisterResponse)
}

@server(
	group: user
	prefix: /douyin/user
	middleware: AuthMiddleware
)
service api {
	@doc "查看用户信息"
	@handler userInfo
	get /(UserInfoRequest) returns (UserInfoResponse)
}