syntax = "v1"

import "base/user.api"
import "base/video.api"

type (
	FeedRequest {
		LatestTime string `form:"latest_time,optional"`
		Token      string `form:"token,optional"`
	}

	FeedResponse {
		StatusCode string  `json:"status_code"`
		StatusMsg  string  `json:"status_msg,omitempty"`
		NextTime   string  `json:"next_time,omitempty"`
		VideoList  []Video `json:"video_list,omitempty"`
	}

	PublishActionRequest {
		Token string `form:"token" validate:"gt=0"`
		Title string `form:"title" validate:"gt=0"`
		Url   string `form:"file_url,optional"`  // 只是方便调用 rpc，跟请求中的 data 字段无关
		Cover string `form:"cover_url,optional"` // 同上
	}

	PublishActionResponse {
		StatusCode string `json:"status_code"`
		StatusMsg  string `json:"status_msg,omitempty"`
	}

	PublishListRequest {
		Token  string `form:"token" validate:"gt=0"`
		UserID int64  `form:"user_id" validate:"gt=0"`
	}

	PublishListResponse {
		StatusCode string  `json:"status_code"`
		StatusMsg  string  `json:"status_msg,omitempty"`
		VideoList  []Video `json:"video_list,omitempty"`
	}
)

@server(
	group: video
	prefix: /douyin/feed
)
service api {
	@doc "视频流"
	@handler Feed
	get / (FeedRequest) returns (FeedResponse)
}

@server(
	group: video
	prefix: /douyin/publish
	middleware: AuthMiddleware
)
service api {
	@doc "发布列表"
	@handler PublishList
	get /list (PublishListRequest) returns (PublishListResponse)
	
	@doc "投稿"
	@handler PublishAction
	post /action (PublishActionRequest) returns (PublishActionResponse)
}