// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	comment "github.com/sprchu/tiktok/api/social/internal/handler/comment"
	favorite "github.com/sprchu/tiktok/api/social/internal/handler/favorite"
	relation "github.com/sprchu/tiktok/api/social/internal/handler/relation"
	"github.com/sprchu/tiktok/api/social/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/action",
					Handler: relation.FollowActionHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/follow/list",
					Handler: relation.FollowListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/follower/list",
					Handler: relation.FansListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/douyin/relation"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/list",
					Handler: favorite.FavoriteListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/action",
					Handler: favorite.FavoriteActionHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/douyin/favorite"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/action",
					Handler: comment.CommentActionHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/list",
					Handler: comment.CommentListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/douyin/comment"),
	)
}
