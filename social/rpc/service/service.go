// Code generated by goctl. DO NOT EDIT!
// Source: social.proto

package service

import (
	"context"

	"github.com/sprchu/tiktok/social/rpc/types/social"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Comment                = social.Comment
	CommentActionRequest   = social.CommentActionRequest
	CommentActionResponse  = social.CommentActionResponse
	CommentListRequest     = social.CommentListRequest
	CommentListResponse    = social.CommentListResponse
	FanListRequest         = social.FanListRequest
	FanListResponse        = social.FanListResponse
	FavoriteActionRequest  = social.FavoriteActionRequest
	FavoriteActionResponse = social.FavoriteActionResponse
	FavoriteListRequest    = social.FavoriteListRequest
	FavoriteListResponse   = social.FavoriteListResponse
	FollowActionRequest    = social.FollowActionRequest
	FollowActionResponse   = social.FollowActionResponse
	FollowListRequest      = social.FollowListRequest
	FollowListResponse     = social.FollowListResponse

	Service interface {
		FollowList(ctx context.Context, in *FollowListRequest, opts ...grpc.CallOption) (*FollowListResponse, error)
		FanList(ctx context.Context, in *FanListRequest, opts ...grpc.CallOption) (*FanListResponse, error)
		FollowAction(ctx context.Context, in *FollowActionRequest, opts ...grpc.CallOption) (*FollowActionResponse, error)
		FavoriteAction(ctx context.Context, in *FavoriteActionRequest, opts ...grpc.CallOption) (*FavoriteActionResponse, error)
		FavoriteList(ctx context.Context, in *FavoriteListRequest, opts ...grpc.CallOption) (*FavoriteListResponse, error)
		CommentAction(ctx context.Context, in *CommentActionRequest, opts ...grpc.CallOption) (*CommentActionResponse, error)
		CommentList(ctx context.Context, in *CommentListRequest, opts ...grpc.CallOption) (*CommentListResponse, error)
	}

	defaultService struct {
		cli zrpc.Client
	}
)

func NewService(cli zrpc.Client) Service {
	return &defaultService{
		cli: cli,
	}
}

func (m *defaultService) FollowList(ctx context.Context, in *FollowListRequest, opts ...grpc.CallOption) (*FollowListResponse, error) {
	client := social.NewServiceClient(m.cli.Conn())
	return client.FollowList(ctx, in, opts...)
}

func (m *defaultService) FanList(ctx context.Context, in *FanListRequest, opts ...grpc.CallOption) (*FanListResponse, error) {
	client := social.NewServiceClient(m.cli.Conn())
	return client.FanList(ctx, in, opts...)
}

func (m *defaultService) FollowAction(ctx context.Context, in *FollowActionRequest, opts ...grpc.CallOption) (*FollowActionResponse, error) {
	client := social.NewServiceClient(m.cli.Conn())
	return client.FollowAction(ctx, in, opts...)
}

func (m *defaultService) FavoriteAction(ctx context.Context, in *FavoriteActionRequest, opts ...grpc.CallOption) (*FavoriteActionResponse, error) {
	client := social.NewServiceClient(m.cli.Conn())
	return client.FavoriteAction(ctx, in, opts...)
}

func (m *defaultService) FavoriteList(ctx context.Context, in *FavoriteListRequest, opts ...grpc.CallOption) (*FavoriteListResponse, error) {
	client := social.NewServiceClient(m.cli.Conn())
	return client.FavoriteList(ctx, in, opts...)
}

func (m *defaultService) CommentAction(ctx context.Context, in *CommentActionRequest, opts ...grpc.CallOption) (*CommentActionResponse, error) {
	client := social.NewServiceClient(m.cli.Conn())
	return client.CommentAction(ctx, in, opts...)
}

func (m *defaultService) CommentList(ctx context.Context, in *CommentListRequest, opts ...grpc.CallOption) (*CommentListResponse, error) {
	client := social.NewServiceClient(m.cli.Conn())
	return client.CommentList(ctx, in, opts...)
}
